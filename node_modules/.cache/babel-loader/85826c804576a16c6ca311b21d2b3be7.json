{"ast":null,"code":"import _regeneratorRuntime from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport apiconfig from '../configs/api.config.json';\nvar API = {\n  login: function () {\n    var _login = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(username, password) {\n      var option, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //login: async (data) => {\n              //alert(apiconfig.BASE_URL+apiconfig.ENDPOINTS.LOGIN+' UN '+username+' PW '+password);\n              alert(username);\n              option = {\n                url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.LOGIN,\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                data: {\n                  \"username\": username,\n                  \"password\": password\n                }\n              };\n              _context.prev = 2;\n              _context.next = 5;\n              return axios(option);\n\n            case 5:\n              result = _context.sent;\n              alert('test ' + result);\n              return _context.abrupt(\"return\", result);\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              return _context.abrupt(\"return\", _context.t0.response.data);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[2, 10]]);\n    }));\n\n    function login(_x, _x2) {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }()\n};\nexport default API;","map":{"version":3,"sources":["/home/eksad/Documents/Projek Frontend/src/helpers/API.js"],"names":["axios","apiconfig","API","login","username","password","alert","option","url","BASE_URL","ENDPOINTS","LOGIN","method","headers","data","result","response"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAGA,IAAMC,GAAG,GAAG;AACRC,EAAAA,KAAK;AAAA;AAAA;AAAA,6BAAE,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACP;AACI;AACAC,cAAAA,KAAK,CAACF,QAAD,CAAL;AACIG,cAAAA,MAJD,GAIU;AACTC,gBAAAA,GAAG,EAAEP,SAAS,CAACQ,QAAV,GAAmBR,SAAS,CAACS,SAAV,CAAoBC,KADnC;AAETC,gBAAAA,MAAM,EAAE,MAFC;AAGTC,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX,iBAHA;AAMTC,gBAAAA,IAAI,EACA;AAAC,8BAAYV,QAAb;AACA,8BAAYC;AADZ;AAPK,eAJV;AAAA;AAAA;AAAA,qBAgBoBL,KAAK,CAACO,MAAD,CAhBzB;;AAAA;AAgBKQ,cAAAA,MAhBL;AAiBCT,cAAAA,KAAK,CAAC,UAAQS,MAAT,CAAL;AAjBD,+CAkBQA,MAlBR;;AAAA;AAAA;AAAA;AAAA,+CAoBQ,YAAMC,QAAN,CAAeF,IApBvB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADG,CAAZ;AA2BA,eAAeZ,GAAf","sourcesContent":["import axios from 'axios'\nimport apiconfig from '../configs/api.config.json'\n\n\nconst API = {\n    login: async (username, password) => {\n    //login: async (data) => {\n        //alert(apiconfig.BASE_URL+apiconfig.ENDPOINTS.LOGIN+' UN '+username+' PW '+password);\n        alert(username)\n        let option = {\n            url: apiconfig.BASE_URL+apiconfig.ENDPOINTS.LOGIN,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data:\n                {\"username\": username,\n                \"password\": password\n            }\n        }\n        try {\n            let result = await axios(option)\n            alert('test '+result)\n            return result\n        } catch (error) {\n            return error.response.data\n\n        }\n    }\n}\n\nexport default API"]},"metadata":{},"sourceType":"module"}