{"ast":null,"code":"import _classCallCheck from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/eksad/Documents/Projek Frontend/src/components/content/menu/editMenu.js\";\nimport React from 'react';\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap';\nimport axios from 'axios';\nimport apiconfig from '../../../configs/api.config.json';\n\nvar editMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(editMenu, _React$Component);\n\n  function editMenu(props) {\n    var _this;\n\n    _classCallCheck(this, editMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(editMenu).call(this, props)); // let userdata=\"\"\n    // if(localStorage.getItem(apiconfig.LS.TOKEN)!= null){\n    //let   userdata =JSON.parse(localStorage.getItem(apiconfig.LS.USERDATA))\n    // }\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(editMenu).call(this, props));\n    _this.state = {\n      formdata: {\n        id: '',\n        icon: '',\n        nama: '',\n        path: '',\n        role: ''\n      }\n    };\n    _this.submitHandler = _this.submitHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeHandler = _this.changeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(editMenu, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      console.log(newProps);\n      this.setState({\n        formdata: newProps.menutest\n      }); // alert(JSON.stringify(newProps.companytest))\n    }\n  }, {\n    key: \"changeHandler\",\n    value: function changeHandler(e) {\n      var tmp = this.state.formdata;\n      tmp[e.target.name] = e.target.value;\n      this.setState({\n        formdata: tmp\n      }); //alert(JSON.stringify(tmp))\n    }\n  }, {\n    key: \"submitHandler\",\n    value: function submitHandler() {\n      var _this2 = this;\n\n      //let token = localStorage.getItem(apiconfig.LS.TOKEN)\n      var option = {\n        url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.EDITMENU,\n        method: \"put\",\n        headers: {\n          //\"Authorization\": token,\n          \"Content-Type\": \"application/json\"\n        },\n        data: this.state.formdata\n      };\n      axios(option).then(function (response) {\n        // console.log(this.state.formdata)\n        if (response.status === 200) {\n          _this2.props.modalStatus(1, 'Data Berhasil Diubah');\n        } else {\n          _this2.props.modalStatus(2, 'Failed');\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.state.formdata)\n      return React.createElement(Modal, {\n        isOpen: this.props.edit,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Edit Data Menu\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        class: \"form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"input-group mb-3 input-group-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \" *ID MENU : \"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        readOnly: true,\n        name: \"id\",\n        value: this.state.formdata.id,\n        onChange: this.changeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"input-group mb-3 input-group-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \" *Nama Menu : \"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        name: \"nama\",\n        value: this.state.formdata.nama,\n        onChange: this.changeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"input-group mb-3 input-group-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \" Path Menu : \"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        name: \"path\",\n        value: this.state.formdata.path,\n        onChange: this.changeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"input-group mb-3 input-group-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \" Icons Menu : \"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        name: \"icon\",\n        value: this.state.formdata.icon,\n        onChange: this.changeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.submitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Button, {\n        color: \"warning\",\n        onClick: this.props.closeModalHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return editMenu;\n}(React.Component);\n\nexport default editMenu;","map":{"version":3,"sources":["/home/eksad/Documents/Projek Frontend/src/components/content/menu/editMenu.js"],"names":["React","Modal","ModalBody","ModalFooter","ModalHeader","Button","axios","apiconfig","editMenu","props","state","formdata","id","icon","nama","path","role","submitHandler","bind","changeHandler","newProps","console","log","setState","menutest","e","tmp","target","name","value","option","url","BASE_URL","ENDPOINTS","EDITMENU","method","headers","data","then","response","status","modalStatus","catch","error","edit","className","closeModalHandler","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap'\nimport axios from 'axios'\nimport apiconfig from '../../../configs/api.config.json'\n\nclass editMenu extends React.Component {\n    constructor (props) {\n        super(props)\n        // let userdata=\"\"\n        // if(localStorage.getItem(apiconfig.LS.TOKEN)!= null){\n         //let   userdata =JSON.parse(localStorage.getItem(apiconfig.LS.USERDATA))\n       // }\n\n        super(props)\n        this.state = {\n            formdata: {\n                id:'',\n                icon:'',\n                nama:'',\n                path:'',\n                role:''\n            }\n        }\n        this.submitHandler = this.submitHandler.bind(this)\n        this.changeHandler = this.changeHandler.bind(this)\n    }\n\n    componentWillReceiveProps(newProps) {\n        console.log(newProps)\n        this.setState({\n            formdata : newProps.menutest\n        })\n       // alert(JSON.stringify(newProps.companytest))\n    }\n\n    changeHandler(e) {\n        let tmp = this.state.formdata\n        tmp[e.target.name]=e.target.value\n        this.setState({\n            formdata:tmp\n        })\n        //alert(JSON.stringify(tmp))\n    }\n\n    submitHandler() {\n        //let token = localStorage.getItem(apiconfig.LS.TOKEN)\n        let option = {\n            url: apiconfig.BASE_URL+apiconfig.ENDPOINTS.EDITMENU,\n            method: \"put\",\n            headers:{\n                //\"Authorization\": token,\n                \"Content-Type\" : \"application/json\"\n            },\n            data: this.state.formdata\n           \n        }\n        axios(option)\n        .then((response) => {\n            // console.log(this.state.formdata)\n            if(response.status === 200) {\n                this.props.modalStatus(1, 'Data Berhasil Diubah')\n            } else {\n                this.props.modalStatus(2, 'Failed')\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n    }\n\n    render(){\n        // console.log(this.state.formdata)\n        return(\n            <Modal isOpen={this.props.edit} className={this.props.className}>\n                <ModalHeader>Edit Data Menu</ModalHeader>\n                <ModalBody >\n                <form class=\"form-inline\">\n                    <div class =\"input-group mb-3 input-group-sm\">\n                        <label for=\"text\"> *ID MENU : </label>\n                        <input type=\"text\" class=\"form-control\" readOnly\n                        name=\"id\"\n                        value={this.state.formdata.id}\n                        onChange={this.changeHandler} />\n                    </div>\n\n                    <div class =\"input-group mb-3 input-group-sm\">\n                    <label for=\"text\"> *Nama Menu : </label>\n                        <input type=\"text\" class=\"form-control\"\n                        name=\"nama\"\n                        value={this.state.formdata.nama}\n                        onChange={this.changeHandler} />\n                    </div>\n\n                    <div class =\"input-group mb-3 input-group-sm\">\n                        <label for=\"text\"> Path Menu : </label>\n                        <input type=\"text\" class=\"form-control\"\n                        name=\"path\"\n                        value={this.state.formdata.path}\n                        onChange={this.changeHandler}/>\n                    </div>\n\n                    <div class =\"input-group mb-3 input-group-sm\">\n                        <label for=\"text\"> Icons Menu : </label>\n                        <input type=\"text\" class=\"form-control\"\n                        name=\"icon\"\n                        value={this.state.formdata.icon}\n                        onChange={this.changeHandler}/>\n                    </div>\n\n                    {/* <div class =\"input-group mb-3 input-group-sm\">\n                    <label for=\"text\"> phone : </label>\n                        <input type=\"text\" class=\"form-control\"\n                        name=\"phone\"\n                        value={this.state.formdata.phone}\n                        onChange={this.changeHandler}/>\n                </div> */}\n                </form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={this.submitHandler}>Save</Button>\n                    <Button color=\"warning\" onClick={this.props.closeModalHandler}>Cancel</Button>\n                </ModalFooter>\n            </Modal>\n        )\n    }\n}\nexport default editMenu"]},"metadata":{},"sourceType":"module"}