{"ast":null,"code":"import _regeneratorRuntime from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport apiconfig from '../configs/api.config.json';\nvar API = {\n  //login: async (username, password) => {\n  login: function () {\n    var _login = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(data) {\n      var option, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //alert(apiconfig.BASE_URL+apiconfig.ENDPOINTS.LOGIN+' UN '+username+' PW '+password);\n              option = {\n                url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.LOGIN,\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                data: data\n                /*{\n                    username: username,\n                    password: password\n                }*/\n\n              };\n              _context.prev = 1;\n              _context.next = 4;\n              return axios(option);\n\n            case 4:\n              result = _context.sent;\n              alert(result);\n              return _context.abrupt(\"return\", result);\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              return _context.abrupt(\"return\", _context.t0.response.data);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[1, 9]]);\n    }));\n\n    function login(_x) {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }()\n};\nexport default API;","map":{"version":3,"sources":["/home/eksad/Documents/Projek Frontend/src/helpers/API.js"],"names":["axios","apiconfig","API","login","data","option","url","BASE_URL","ENDPOINTS","LOGIN","method","headers","result","alert","response"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAGA,IAAMC,GAAG,GAAG;AACR;AACAC,EAAAA,KAAK;AAAA;AAAA;AAAA,6BAAE,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;AACIC,cAAAA,MAFD,GAEU;AACTC,gBAAAA,GAAG,EAAEL,SAAS,CAACM,QAAV,GAAmBN,SAAS,CAACO,SAAV,CAAoBC,KADnC;AAETC,gBAAAA,MAAM,EAAE,MAFC;AAGTC,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX,iBAHA;AAMTP,gBAAAA,IAAI,EAACA;AACL;;;;;AAPS,eAFV;AAAA;AAAA;AAAA,qBAeoBJ,KAAK,CAACK,MAAD,CAfzB;;AAAA;AAeKO,cAAAA,MAfL;AAgBCC,cAAAA,KAAK,CAACD,MAAD,CAAL;AAhBD,+CAiBQA,MAjBR;;AAAA;AAAA;AAAA;AAAA,+CAmBQ,YAAME,QAAN,CAAeV,IAnBvB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAFG,CAAZ;AA2BA,eAAeF,GAAf","sourcesContent":["import axios from 'axios'\nimport apiconfig from '../configs/api.config.json'\n\n\nconst API = {\n    //login: async (username, password) => {\n    login: async (data) => {\n        //alert(apiconfig.BASE_URL+apiconfig.ENDPOINTS.LOGIN+' UN '+username+' PW '+password);\n        let option = {\n            url: apiconfig.BASE_URL+apiconfig.ENDPOINTS.LOGIN,\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data:data \n            /*{\n                username: username,\n                password: password\n            }*/\n        }\n        try {\n            let result = await axios(option)\n            alert(result)\n            return result\n        } catch (error) {\n            return error.response.data\n\n        }\n    }\n}\n\nexport default API"]},"metadata":{},"sourceType":"module"}