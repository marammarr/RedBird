{"ast":null,"code":"import _classCallCheck from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/eksad/Documents/Projek Frontend/src/components/content/menu/createMenu.js\";\nimport React from 'react';\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap';\nimport axios from 'axios';\nimport apiconfig from '../../../configs/api.config.json';\nimport Select from 'react-select';\n\nvar createMenu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(createMenu, _React$Component);\n\n  function createMenu(props) {\n    var _this;\n\n    _classCallCheck(this, createMenu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(createMenu).call(this, props)); // let number=this.props.company\n    // console.log(number)\n    //let userdata=JSON.parse(localStorage.getItem(apiconfig.LS.USERDATA))\n    // let userdata=\"\"\n    // if(localStorage.getItem(apiconfig.LS.TOKEN)!=null){\n    //let   userdata =JSON.parse(localStorage.getItem(apiconfig.LS.USERDATA))\n    //}\n\n    _this.selectChangeHandler = function (dipilih) {\n      _this.state.formdata['role'] = dipilih.value; //alert('anda pilih '+JSON.stringify(this.state.formdata))\n    };\n\n    _this.state = {\n      formdata: {\n        id: '',\n        icon: '',\n        nama: '',\n        path: '',\n        role: '',\n        dihapus: false\n      } // let number=this.state.company.length\n\n    };\n    _this.submitHandler = _this.submitHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeHandler = _this.changeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(createMenu, [{\n    key: \"changeHandler\",\n    value: function changeHandler(e) {\n      var tmp = this.state.formdata;\n      tmp[e.target.name] = e.target.value;\n      this.setState({\n        formdata: tmp\n      });\n    }\n  }, {\n    key: \"submitHandler\",\n    value: function submitHandler() {\n      var _this2 = this;\n\n      var option = {\n        url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.MENU,\n        method: \"post\",\n        headers: {\n          //\"Authorization\": token,\n          \"Content-Type\": \"application/json\"\n        },\n        data: this.state.formdata\n      };\n      axios(option).then(function (response) {\n        if (response.data.parameterNilai === 1) {\n          _this2.props.modalStatus(1, 'Data Berhasil Tersimpan');\n        } else {\n          _this2.props.modalStatus(2, 'Failed');\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var opsiRole = [{\n        'value': 'ROLE ADMIN',\n        'label': 'ROLE ADMIN'\n      }, {\n        'value': 'ROLE USER',\n        'label': 'ROLE USER'\n      }];\n      return React.createElement(Modal, {\n        isOpen: this.props.create,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Add Menu\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        class: \"form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"input-group mb-3 input-group-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"ID Menu\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        placeholder: \"\",\n        readOnly: true,\n        name: \"id\",\n        onChange: this.changeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"input-group mb-3 input-group-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Nama Menu\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        placeholder: \"Nama Menu\",\n        name: \"nama\",\n        onChange: this.changeHandler,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"input-group mb-3 input-group-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Path Menu\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        placeholder: \"Path Menu\",\n        name: \"path\",\n        onChange: this.changeHandler,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"input-group mb-3 input-group-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Role\"), React.createElement(Select, {\n        class: \"form-control\",\n        name: \"role\",\n        onChange: this.selectChangeHandler,\n        options: opsiRole,\n        label: this.state.formdata.role,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"input-group mb-3 input-group-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Icons Menu\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        placeholder: \"Icons Menu\",\n        name: \"icon\",\n        onChange: this.changeHandler,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.submitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Button, {\n        color: \"warning\",\n        onClick: this.props.closeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return createMenu;\n}(React.Component);\n\nexport default createMenu;","map":{"version":3,"sources":["/home/eksad/Documents/Projek Frontend/src/components/content/menu/createMenu.js"],"names":["React","Modal","ModalBody","ModalFooter","ModalHeader","Button","axios","apiconfig","Select","createMenu","props","selectChangeHandler","dipilih","state","formdata","value","id","icon","nama","path","role","dihapus","submitHandler","bind","changeHandler","e","tmp","target","name","setState","option","url","BASE_URL","ENDPOINTS","MENU","method","headers","data","then","response","parameterNilai","modalStatus","catch","error","console","log","opsiRole","create","className","closeHandler","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,WAAxC,EAAqDC,MAArD,QAAmE,YAAnE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;IAEMC,U;;;;;AACF,sBAAaC,KAAb,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN,GADe,CAEf;AACA;AACA;AACA;AAEA;AACC;AACD;;AATe,UA+BnBC,mBA/BmB,GA+BG,UAACC,OAAD,EAAW;AAC7B,YAAKC,KAAL,CAAWC,QAAX,CAAoB,MAApB,IAA4BF,OAAO,CAACG,KAApC,CAD6B,CAE7B;AACH,KAlCkB;;AAUf,UAAKF,KAAL,GAAW;AACPC,MAAAA,QAAQ,EAAC;AACLE,QAAAA,EAAE,EAAC,EADE;AAELC,QAAAA,IAAI,EAAC,EAFA;AAGLC,QAAAA,IAAI,EAAC,EAHA;AAILC,QAAAA,IAAI,EAAC,EAJA;AAKLC,QAAAA,IAAI,EAAC,EALA;AAMLC,QAAAA,OAAO,EAAC;AANH,OADF,CAUX;;AAVW,KAAX;AAWA,UAAKC,aAAL,GAAmB,MAAKA,aAAL,CAAmBC,IAAnB,uDAAnB;AACA,UAAKC,aAAL,GAAmB,MAAKA,aAAL,CAAmBD,IAAnB,uDAAnB;AAtBe;AAuBlB;;;;kCACaE,C,EAAE;AACZ,UAAIC,GAAG,GAAC,KAAKb,KAAL,CAAWC,QAAnB;AACAY,MAAAA,GAAG,CAACD,CAAC,CAACE,MAAF,CAASC,IAAV,CAAH,GAAmBH,CAAC,CAACE,MAAF,CAASZ,KAA5B;AACA,WAAKc,QAAL,CAAc;AACVf,QAAAA,QAAQ,EAACY;AADC,OAAd;AAGH;;;oCAKc;AAAA;;AACX,UAAII,MAAM,GAAC;AACPC,QAAAA,GAAG,EAAExB,SAAS,CAACyB,QAAV,GAAmBzB,SAAS,CAAC0B,SAAV,CAAoBC,IADrC;AAEPC,QAAAA,MAAM,EAAE,MAFD;AAGPC,QAAAA,OAAO,EAAC;AACJ;AACA,0BAAiB;AAFb,SAHD;AAOPC,QAAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWC;AAPV,OAAX;AASAR,MAAAA,KAAK,CAACwB,MAAD,CAAL,CACCQ,IADD,CACM,UAACC,QAAD,EAAY;AACd,YAAGA,QAAQ,CAACF,IAAT,CAAcG,cAAd,KAAiC,CAApC,EAAuC;AACnC,UAAA,MAAI,CAAC9B,KAAL,CAAW+B,WAAX,CAAuB,CAAvB,EAA0B,yBAA1B;AACH,SAFD,MAEO;AACH,UAAA,MAAI,CAAC/B,KAAL,CAAW+B,WAAX,CAAuB,CAAvB,EAA0B,QAA1B;AACH;AACJ,OAPD,EAQCC,KARD,CAQO,UAACC,KAAD,EAAS;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAVD;AAWH;;;6BACO;AACJ,UAAIG,QAAQ,GAAG,CAAC;AAAC,iBAAQ,YAAT;AAAsB,iBAAQ;AAA9B,OAAD,EAA6C;AAAC,iBAAQ,WAAT;AAAqB,iBAAQ;AAA7B,OAA7C,CAAf;AACA,aACI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKpC,KAAL,CAAWqC,MAA1B;AAAkC,QAAA,SAAS,EAAE,KAAKrC,KAAL,CAAWsC,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,KAAK,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAE,iCAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAC,cAAzB;AAAwC,QAAA,WAAW,EAAC,EAApD;AAAuD,QAAA,QAAQ,MAA/D;AACA,QAAA,IAAI,EAAC,IADL;AACU,QAAA,QAAQ,EAAE,KAAKxB,aADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAMI;AAAK,QAAA,KAAK,EAAE,iCAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAO,QAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAC,cAAzB;AAAwC,QAAA,WAAW,EAAC,WAApD;AACA,QAAA,IAAI,EAAC,MADL;AACY,QAAA,QAAQ,EAAE,KAAKA,aAD3B;AAC0C,QAAA,QAAQ,MADlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CANJ,EAWI;AAAK,QAAA,KAAK,EAAE,iCAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAC,cAAzB;AAAwC,QAAA,WAAW,EAAC,WAApD;AACA,QAAA,IAAI,EAAC,MADL;AACY,QAAA,QAAQ,EAAE,KAAKA,aAD3B;AAC0C,QAAA,QAAQ,MADlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAXJ,EAgBI;AAAK,QAAA,KAAK,EAAE,iCAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,cAAd;AAA6B,QAAA,IAAI,EAAC,MAAlC;AAAyC,QAAA,QAAQ,EAAE,KAAKb,mBAAxD;AAA6E,QAAA,OAAO,EAAEmC,QAAtF;AAAgG,QAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWC,QAAX,CAAoBM,IAA3H;AAAiI,QAAA,QAAQ,MAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAhBJ,EAoBI;AAAK,QAAA,KAAK,EAAE,iCAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAC,cAAzB;AAAwC,QAAA,WAAW,EAAC,YAApD;AACA,QAAA,IAAI,EAAC,MADL;AACY,QAAA,QAAQ,EAAE,KAAKI,aAD3B;AAC0C,QAAA,QAAQ,MADlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CApBJ,CADA,CAFJ,EA4CI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,KAAKF,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAG,KAAKZ,KAAL,CAAWuC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CA5CJ,CADJ;AAmDH;;;;EA/GoBjD,KAAK,CAACkD,S;;AAiH/B,eAAezC,UAAf","sourcesContent":["import React from 'react'\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap'\nimport axios from 'axios'\nimport apiconfig from '../../../configs/api.config.json'\nimport Select from 'react-select'\n\nclass createMenu extends React.Component{\n    constructor (props){\n        super(props)\n        // let number=this.props.company\n        // console.log(number)\n        //let userdata=JSON.parse(localStorage.getItem(apiconfig.LS.USERDATA))\n        // let userdata=\"\"\n\n        // if(localStorage.getItem(apiconfig.LS.TOKEN)!=null){\n         //let   userdata =JSON.parse(localStorage.getItem(apiconfig.LS.USERDATA))\n        //}\n        this.state={\n            formdata:{\n                id:'',\n                icon:'',\n                nama:'',\n                path:'',\n                role:'',\n                dihapus:false\n            }\n        }\n        // let number=this.state.company.length\n        this.submitHandler=this.submitHandler.bind(this)\n        this.changeHandler=this.changeHandler.bind(this)\n    }\n    changeHandler(e){\n        let tmp=this.state.formdata\n        tmp[e.target.name]=e.target.value\n        this.setState({\n            formdata:tmp\n        })\n    }\n    selectChangeHandler = (dipilih)=>{\n        this.state.formdata['role']=dipilih.value\n        //alert('anda pilih '+JSON.stringify(this.state.formdata))\n    }\n    submitHandler(){\n        let option={\n            url: apiconfig.BASE_URL+apiconfig.ENDPOINTS.MENU,\n            method: \"post\",\n            headers:{\n                //\"Authorization\": token,\n                \"Content-Type\" : \"application/json\"\n            },\n            data: this.state.formdata\n        }\n        axios(option)\n        .then((response)=>{\n            if(response.data.parameterNilai === 1) {\n                this.props.modalStatus(1, 'Data Berhasil Tersimpan')\n            } else {\n                this.props.modalStatus(2, 'Failed')\n            }\n        })\n        .catch((error)=>{\n            console.log(error);\n        })\n    }\n    render(){\n        let opsiRole = [{'value':'ROLE ADMIN','label':'ROLE ADMIN'},{'value':'ROLE USER','label':'ROLE USER'}]\n        return(\n            <Modal isOpen={this.props.create} className={this.props.className}>\n                <ModalHeader>Add Menu</ModalHeader>\n                <ModalBody >\n                <form class=\"form-inline\">\n                    <div class =\"input-group mb-3 input-group-sm\">\n                        <label for=\"text\">ID Menu</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"\" readOnly\n                        name=\"id\" onChange={this.changeHandler} />\n                    </div>\n                    <div class =\"input-group mb-3 input-group-sm\">\n                    <label for=\"text\">Nama Menu</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Nama Menu\"\n                        name=\"nama\" onChange={this.changeHandler} required/>\n                    </div>\n                    <div class =\"input-group mb-3 input-group-sm\">\n                        <label>Path Menu</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Path Menu\"\n                        name=\"path\" onChange={this.changeHandler} required />\n                    </div>\n                    <div class =\"input-group mb-3 input-group-sm\">\n                        <label>Role</label>\n                        <Select class=\"form-control\" name=\"role\" onChange={this.selectChangeHandler} options={opsiRole} label={this.state.formdata.role} required />\n                    </div>\n                    <div class =\"input-group mb-3 input-group-sm\">\n                        <label>Icons Menu</label>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Icons Menu\"\n                        name=\"icon\" onChange={this.changeHandler} required />\n                    </div>\n                </form>\n                {/* <form class=\"form-inline\">\n                <div class =\"input-group mb-3 input-group-sm\">\n                    <label for=\"text\">address</label>\n                    <textarea type=\"text-area\" class=\"form-control\" placeholder=\"address\"\n                    name=\"address\" value={this.state.formdata.address} onChange={this.changeHandler} required/>\n                </div>\n                </form>\n                <form class=\"form-inline\">\n                <div class =\"input-group mb-3 input-group-sm\">\n                    <label>phone</label>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"phone\"\n                    name=\"phone\" value={this.state.formdata.phone} onChange={this.changeHandler} required/>\n                </div>\n                </form> */}\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={this.submitHandler}>Save</Button>\n                    <Button color=\"warning\" onClick ={this.props.closeHandler}>Cancel</Button>\n                </ModalFooter>\n        </Modal>\n        )\n    }\n}\nexport default createMenu"]},"metadata":{},"sourceType":"module"}