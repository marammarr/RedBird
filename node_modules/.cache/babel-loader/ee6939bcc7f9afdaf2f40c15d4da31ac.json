{"ast":null,"code":"import _classCallCheck from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/eksad/Documents/Projek Frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/eksad/Documents/Projek Frontend/src/components/content/jurusan/EditJurusan.js\";\nimport React from 'react';\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap';\nimport axios from 'axios';\nimport apiconfig from '../../../configs/api.config.json';\n\nvar EditJurusan =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditJurusan, _React$Component);\n\n  function EditJurusan(props) {\n    var _this;\n\n    _classCallCheck(this, EditJurusan);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditJurusan).call(this, props)); // let userdata=\"\"\n    // if(localStorage.getItem(apiconfig.LS.TOKEN)!= null){\n    //let   userdata =JSON.parse(localStorage.getItem(apiconfig.LS.USERDATA))\n    // }        \n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditJurusan).call(this, props));\n    _this.state = {\n      formdata: {\n        id: '',\n        kode: '',\n        nama: ''\n      }\n    };\n    _this.submitHandler = _this.submitHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeHandler = _this.changeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EditJurusan, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      console.log(newProps);\n      this.setState({\n        formdata: newProps.usertest\n      }); // alert(JSON.stringify(newProps.companytest))\n    }\n  }, {\n    key: \"changeHandler\",\n    value: function changeHandler(e) {\n      var tmp = this.state.formdata;\n      tmp[e.target.name] = e.target.value;\n      this.setState({\n        formdata: tmp\n      }); //alert(JSON.stringify(tmp))\n    }\n  }, {\n    key: \"submitHandler\",\n    value: function submitHandler() {\n      var _this2 = this;\n\n      //let token = localStorage.getItem(apiconfig.LS.TOKEN)\n      var option = {\n        url: apiconfig.BASE_URL + apiconfig.ENDPOINTS.JURUSAN.UTAMA,\n        method: \"put\",\n        headers: {\n          //\"Authorization\": token,\n          \"Content-Type\": \"application/json\"\n        },\n        data: this.state.formdata\n      };\n      axios(option).then(function (response) {\n        // console.log(this.state.formdata)\n        if (response.data.parameterNilai === 1) {\n          alert('Success');\n\n          _this2.props.history.push('/listJurusan');\n        } else {\n          alert(response.status);\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.state.formdata)\n      return React.createElement(Modal, {\n        isOpen: this.props.edit,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \" Edit Company\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        class: \"form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"input-group mb-3 input-group-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \" *ID Jurusan: \"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        readOnly: true,\n        name: \"jurid\",\n        value: this.state.formdata.jurid,\n        onChange: this.changeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"input-group mb-3 input-group-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \" *Kode Jurusan : \"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        name: \"jurkode\",\n        value: this.state.formdata.jurkode,\n        onChange: this.changeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"input-group mb-3 input-group-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \" *Nama Jurusan : \"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        name: \"jurnama\",\n        value: this.state.formdata.jurnama,\n        onChange: this.changeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.submitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Button, {\n        color: \"warning\",\n        onClick: this.props.closeModalHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return EditJurusan;\n}(React.Component);\n\nexport default EditJurusan;","map":{"version":3,"sources":["/home/eksad/Documents/Projek Frontend/src/components/content/jurusan/EditJurusan.js"],"names":["React","Modal","ModalBody","ModalFooter","ModalHeader","Button","axios","apiconfig","EditJurusan","props","state","formdata","id","kode","nama","submitHandler","bind","changeHandler","newProps","console","log","setState","usertest","e","tmp","target","name","value","option","url","BASE_URL","ENDPOINTS","JURUSAN","UTAMA","method","headers","data","then","response","parameterNilai","alert","history","push","status","catch","error","edit","className","jurid","jurkode","jurnama","closeModalHandler","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap'\nimport axios from 'axios'\nimport apiconfig from '../../../configs/api.config.json'\n\nclass EditJurusan extends React.Component {\n    constructor (props) {\n        super(props)\n        // let userdata=\"\"\n        // if(localStorage.getItem(apiconfig.LS.TOKEN)!= null){\n         //let   userdata =JSON.parse(localStorage.getItem(apiconfig.LS.USERDATA))\n       // }        \n       \n        super(props)\n        this.state = {\n            formdata: {\n                id : '',\n                kode: '',\n                nama: ''\n            }\n        }\n        this.submitHandler = this.submitHandler.bind(this)\n        this.changeHandler = this.changeHandler.bind(this)\n    }\n\n    componentWillReceiveProps(newProps) {\n        console.log(newProps)\n        this.setState({\n            formdata : newProps.usertest\n        })\n       // alert(JSON.stringify(newProps.companytest))\n    }\n\n    changeHandler(e) {\n        \n        let tmp = this.state.formdata\n        tmp[e.target.name]=e.target.value\n        this.setState({\n            formdata:tmp\n        })\n        //alert(JSON.stringify(tmp))\n    }\n\n    submitHandler() {\n        //let token = localStorage.getItem(apiconfig.LS.TOKEN)\n        let option = {\n            url: apiconfig.BASE_URL+apiconfig.ENDPOINTS.JURUSAN.UTAMA,\n            method: \"put\",\n            headers:{\n                //\"Authorization\": token,\n                \"Content-Type\" : \"application/json\"\n            },\n            data: this.state.formdata\n           \n        }\n        axios(option)\n        .then((response) => { \n            // console.log(this.state.formdata)\n            if(response.data.parameterNilai === 1) {\n                alert('Success')\n                this.props.history.push('/listJurusan')\n                \n            } else {\n                alert(response.status)\n            }\n        })\n        .catch((error) => {\n            console.log(error);            \n        })\n    }\n\n    render(){\n        // console.log(this.state.formdata)\n        return(\n            <Modal isOpen={this.props.edit} className={this.props.className}>\n                <ModalHeader> Edit Company</ModalHeader>\n                <ModalBody >\n                <form class=\"form-inline\">\n                    <div class =\"input-group mb-3 input-group-sm\">\n                        <label for=\"text\"> *ID Jurusan: </label>\n                        <input type=\"text\" class=\"form-control\" readOnly\n                        name=\"jurid\" \n                        value={this.state.formdata.jurid}  \n                        onChange={this.changeHandler} />\n                                               \n                    </div>\n                    <div class =\"input-group mb-3 input-group-sm\">\n                        <label for=\"text\"> *Kode Jurusan : </label>\n                        <input type=\"text\" class=\"form-control\" \n                        name=\"jurkode\" \n                        value={this.state.formdata.jurkode} \n                        onChange={this.changeHandler} />\n                    </div>\n                \n                    <div class =\"input-group mb-3 input-group-sm\"> \n                    <label for=\"text\"> *Nama Jurusan : </label>\n                        <input type=\"text\" class=\"form-control\" \n                        name=\"jurnama\" \n                        value={this.state.formdata.jurnama} \n                        onChange={this.changeHandler} />\n                    {/* <label for=\"text\"> address : </label>\n                        <input type=\"text\" class=\"form-control\"\n                        name=\"address\" \n                        value={this.state.formdata.address} \n                        onChange={this.changeHandler}/>\n                    </div>\n                    \n                    <div class =\"input-group mb-3 input-group-sm\">\n                    <label for=\"text\"> phone : </label>\n                        <input type=\"text\" class=\"form-control\"\n                        name=\"phone\" \n                        value={this.state.formdata.phone} \n                        onChange={this.changeHandler}/> */}\n                   </div>\n                   \n                </form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick ={this.submitHandler}>Save</Button>\n                    <Button color=\"warning\" onClick={this.props.closeModalHandler}>Cancel</Button>\n                </ModalFooter>\n            </Modal>\n        )\n    }\n}\nexport default EditJurusan"]},"metadata":{},"sourceType":"module"}